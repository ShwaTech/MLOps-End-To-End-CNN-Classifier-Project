pipeline {
  agent any

  environment {
    ECR_REPOSITORY = credentials('ECR_REPOSITORY')
    AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
    AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    AWS_DEFAULT_REGION = credentials('AWS_DEFAULT_REGION')
  }
  
  stages {
    stage('Continuous Integration') {
      steps {
        script {
          echo "Linting repository"
          echo "Running unit tests"
        }
      }
    }
  
    stage('Build and Push Image on EC2') {
      steps {
        sshagent(['ssh_key']) {
          sh '''
            ssh -o StrictHostKeyChecking=no -l ubuntu 3.232.58.183 "
              echo '--- Logging into ECR ---' &&
              aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com &&

              echo '--- Building Docker Image ---' &&
              cd /home/ubuntu/ &&
              docker build -t ${ECR_REPOSITORY}:latest . &&

              echo '--- Pushing Docker Image ---' &&
              docker push ${ECR_REPOSITORY}:latest
            "
          '''
        }
      }
    }
  
    stage('Continuous Deployment') {
      steps {
        sshagent(['ssh_key']) {
          sh '''
            ssh -o StrictHostKeyChecking=no -l ubuntu 44.215.220.137 "
              cd /home/ubuntu/ && wget https://raw.githubusercontent.com/entbappy/Chest-Disease-Classification-from-Chest-CT-Scan-Image/main/docker-compose.yml
              export IMAGE_NAME=${ECR_REPOSITORY}:latest
              aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
              docker compose up -d
            "
          '''
        }
      }
    }
  }
  
  post {
    always {
      sshagent(['ssh_key']) {
        sh '''
          ssh -o StrictHostKeyChecking=no -l ubuntu 3.232.58.183 "docker system prune -f"
        '''
      }
    }
  }
}
